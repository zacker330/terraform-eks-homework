{
   "output": {
      "eks_endpoint": {
         "value": "${aws_eks_cluster.health_test_main.endpoint}"
      },
      "kubeconfig-certificate-authority-data": {
         "sensitive": true,
         "value": "${aws_eks_cluster.health_test_main.certificate_authority[0].data}"
      }
   },
   "provider": {
      "aws": {
         "region": "ap-southeast-2"
      },
      "postgresql": {
         "connect_timeout": 15,
         "database": "postgres",
         "host": "127.0.0.1",
         "password": "postgres",
         "port": 5432,
         "sslmode": "disable",
         "username": "postgres"
      }
   },
   "resource": {
      "aws_cloudwatch_log_group": {
         "health_test_main": {
            "name": "/aws/eks/health_test_main/cluster",
            "retention_in_days": 1,
            "tags": {
               "Name": "/aws/eks/health_test_main/cluster",
               "env": "test",
               "owner": "health",
               "terraform": true
            }
         }
      },
      "aws_eip": {
         "public_health_test_main_0_nat": {
            "tags": {
               "Name": "public_health_test_main_0_nat",
               "env": "test",
               "owner": "health",
               "terraform": true
            },
            "vpc": true
         },
         "public_health_test_main_1_nat": {
            "tags": {
               "Name": "public_health_test_main_1_nat",
               "env": "test",
               "owner": "health",
               "terraform": true
            },
            "vpc": true
         }
      },
      "aws_eks_cluster": {
         "health_test_main": {
            "depends_on": [
               "aws_iam_role_policy_attachment.attach_eks_cluster_policy",
               "aws_cloudwatch_log_group.health_test_main"
            ],
            "enabled_cluster_log_types": [
               "api",
               "audit"
            ],
            "name": "health_test_main",
            "role_arn": "${aws_iam_role.eks_service_role.arn}",
            "tags": {
               "Name": "health_test_main",
               "env": "test",
               "owner": "health",
               "terraform": true
            },
            "version": 1.25,
            "vpc_config": {
               "endpoint_private_access": true,
               "endpoint_public_access": true,
               "public_access_cidrs": [
                  "0.0.0.0/0"
               ],
               "security_group_ids": [
                  "${aws_security_group.health_test_main_eks_sg.id}",
                  "${aws_security_group.health_test_main_nodes_sg.id}"
               ],
               "subnet_ids": [
                  "${aws_subnet.private_health_test_main_0.id}",
                  "${aws_subnet.private_health_test_main_1.id}",
                  "${aws_subnet.public_health_test_main_0.id}",
                  "${aws_subnet.public_health_test_main_1.id}"
               ]
            }
         }
      },
      "aws_eks_node_group": {
         "health_test_main_private_app_node_group": {
            "ami_type": "AL2_x86_64",
            "cluster_name": "health_test_main",
            "depends_on": [
               "aws_eks_cluster.health_test_main",
               "aws_iam_role_policy_attachment.attach_eks_workernode_policy",
               "aws_iam_role_policy_attachment.attach_eks_cni_policy",
               "aws_iam_role_policy_attachment.attach_eks_ec2_container_registry_read_only_policy",
               "aws_iam_role_policy_attachment.attach_eks_ssm_managed_instance_core_policy"
            ],
            "disk_size": 10,
            "instance_types": [
               "t2.small",
               "t2.medium"
            ],
            "labels": {
               "env": "test",
               "owner": "health",
               "terraform": true
            },
            "lifecycle": {
               "ignore_changes": [
                  "scaling_config[0].desired_size"
               ]
            },
            "node_group_name": "health_test_main_private_app_node_group",
            "node_role_arn": "${aws_iam_role.eks_node_role.arn}",
            "release_version": "1.25.7-20230411",
            "scaling_config": {
               "desired_size": 1,
               "max_size": 2,
               "min_size": 0
            },
            "subnet_ids": [
               "${aws_subnet.private_health_test_main_0.id}",
               "${aws_subnet.private_health_test_main_1.id}"
            ],
            "update_config": {
               "max_unavailable": 1
            }
         },
         "health_test_main_public_node_group": {
            "ami_type": "AL2_x86_64",
            "cluster_name": "health_test_main",
            "depends_on": [
               "aws_eks_cluster.health_test_main",
               "aws_iam_role_policy_attachment.attach_eks_workernode_policy",
               "aws_iam_role_policy_attachment.attach_eks_cni_policy",
               "aws_iam_role_policy_attachment.attach_eks_ec2_container_registry_read_only_policy",
               "aws_iam_role_policy_attachment.attach_eks_ssm_managed_instance_core_policy"
            ],
            "disk_size": 10,
            "instance_types": [
               "t2.small",
               "t2.medium"
            ],
            "labels": {
               "Name": "health_test_main_public_node_group",
               "env": "test"
            },
            "node_group_name": "health_test_main_public_node_group",
            "node_role_arn": "${aws_iam_role.eks_node_role.arn}",
            "release_version": "1.25.7-20230411",
            "scaling_config": {
               "desired_size": 0,
               "max_size": 2,
               "min_size": 0
            },
            "subnet_ids": [
               "${aws_subnet.public_health_test_main_0.id}",
               "${aws_subnet.public_health_test_main_1.id}"
            ],
            "update_config": {
               "max_unavailable": 1
            }
         }
      },
      "aws_iam_role": {
         "eks_node_role": {
            "assume_role_policy": "{\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"ec2.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}",
            "name": "eks_node_role"
         },
         "eks_service_role": {
            "assume_role_policy": "{\"Statement\": [{\"Action\": \"sts:AssumeRole\", \"Effect\": \"Allow\", \"Principal\": {\"Service\": \"eks.amazonaws.com\"}}], \"Version\": \"2012-10-17\"}",
            "name": "eks_service_role"
         }
      },
      "aws_iam_role_policy_attachment": {
         "attach_eks_cluster_policy": {
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "${aws_iam_role.eks_service_role.name}"
         },
         "attach_eks_cni_policy": {
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "${aws_iam_role.eks_node_role.name}"
         },
         "attach_eks_ec2_container_registry_read_only_policy": {
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "${aws_iam_role.eks_node_role.name}"
         },
         "attach_eks_ssm_managed_instance_core_policy": {
            "policy_arn": "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore",
            "role": "${aws_iam_role.eks_node_role.name}"
         },
         "attach_eks_workernode_policy": {
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "${aws_iam_role.eks_node_role.name}"
         }
      },
      "aws_internet_gateway": {
         "health_test_main": {
            "tags": {
               "Name": "health_test_main",
               "env": "test",
               "owner": "health",
               "terraform": true
            },
            "vpc_id": "${aws_vpc.health_test_main.id}"
         }
      },
      "aws_nat_gateway": {
         "public_health_test_main_0": {
            "allocation_id": "${aws_eip.public_health_test_main_0_nat.id}",
            "depends_on": [
               "aws_internet_gateway.health_test_main"
            ],
            "subnet_id": "${aws_subnet.public_health_test_main_0.id}",
            "tags": {
               "Name": "health_nat_gateway",
               "env": "test",
               "owner": "health",
               "terraform": true
            }
         },
         "public_health_test_main_1": {
            "allocation_id": "${aws_eip.public_health_test_main_1_nat.id}",
            "depends_on": [
               "aws_internet_gateway.health_test_main"
            ],
            "subnet_id": "${aws_subnet.public_health_test_main_1.id}",
            "tags": {
               "Name": "health_nat_gateway",
               "env": "test",
               "owner": "health",
               "terraform": true
            }
         }
      },
      "aws_route_table": {
         "health_test_main_igw_route_table": {
            "route": [
               {
                  "carrier_gateway_id": "",
                  "cidr_block": "0.0.0.0/0",
                  "core_network_arn": "",
                  "destination_prefix_list_id": "",
                  "egress_only_gateway_id": "",
                  "gateway_id": "${aws_internet_gateway.health_test_main.id}",
                  "instance_id": "",
                  "ipv6_cidr_block": null,
                  "local_gateway_id": "",
                  "nat_gateway_id": "",
                  "network_interface_id": null,
                  "transit_gateway_id": "",
                  "vpc_endpoint_id": "",
                  "vpc_peering_connection_id": ""
               }
            ],
            "tags": {
               "Name": "health_test_main_igw_route_table",
               "env": "test",
               "owner": "health"
            },
            "vpc_id": "${aws_vpc.health_test_main.id}"
         },
         "public_health_test_main_0": {
            "route": [
               {
                  "carrier_gateway_id": "",
                  "cidr_block": "0.0.0.0/0",
                  "core_network_arn": "",
                  "destination_prefix_list_id": "",
                  "egress_only_gateway_id": "",
                  "gateway_id": "",
                  "instance_id": "",
                  "ipv6_cidr_block": null,
                  "local_gateway_id": "",
                  "nat_gateway_id": "${aws_nat_gateway.public_health_test_main_0.id}",
                  "network_interface_id": null,
                  "transit_gateway_id": "",
                  "vpc_endpoint_id": "",
                  "vpc_peering_connection_id": ""
               }
            ],
            "tags": {
               "Name": "public_health_test_main_0",
               "env": "test",
               "owner": "health"
            },
            "vpc_id": "${aws_vpc.health_test_main.id}"
         },
         "public_health_test_main_1": {
            "route": [
               {
                  "carrier_gateway_id": "",
                  "cidr_block": "0.0.0.0/0",
                  "core_network_arn": "",
                  "destination_prefix_list_id": "",
                  "egress_only_gateway_id": "",
                  "gateway_id": "",
                  "instance_id": "",
                  "ipv6_cidr_block": null,
                  "local_gateway_id": "",
                  "nat_gateway_id": "${aws_nat_gateway.public_health_test_main_1.id}",
                  "network_interface_id": null,
                  "transit_gateway_id": "",
                  "vpc_endpoint_id": "",
                  "vpc_peering_connection_id": ""
               }
            ],
            "tags": {
               "Name": "public_health_test_main_1",
               "env": "test",
               "owner": "health"
            },
            "vpc_id": "${aws_vpc.health_test_main.id}"
         }
      },
      "aws_route_table_association": {
         "igw_public_health_test_main_0": {
            "route_table_id": "${aws_route_table.health_test_main_igw_route_table.id}",
            "subnet_id": "${aws_subnet.public_health_test_main_0.id}"
         },
         "igw_public_health_test_main_1": {
            "route_table_id": "${aws_route_table.health_test_main_igw_route_table.id}",
            "subnet_id": "${aws_subnet.public_health_test_main_1.id}"
         },
         "nat_private_health_test_main_0_0": {
            "route_table_id": "${aws_route_table.public_health_test_main_0.id}",
            "subnet_id": "${aws_subnet.private_health_test_main_0.id}"
         },
         "nat_private_health_test_main_1_1": {
            "route_table_id": "${aws_route_table.public_health_test_main_1.id}",
            "subnet_id": "${aws_subnet.private_health_test_main_1.id}"
         }
      },
      "aws_security_group": {
         "health_test_main_eks_sg": {
            "description": "Cluster communication with worker nodes",
            "name": "health_test_main_eks_sg",
            "vpc_id": "${aws_vpc.health_test_main.id}"
         },
         "health_test_main_nodes_sg": {
            "description": "Security group for all nodes in the cluster",
            "egress": [
               {
                  "cidr_blocks": [
                     "0.0.0.0/0"
                  ],
                  "description": "",
                  "from_port": 0,
                  "ipv6_cidr_blocks": [ ],
                  "prefix_list_ids": [ ],
                  "protocol": "-1",
                  "security_groups": [ ],
                  "self": null,
                  "to_port": 0
               }
            ],
            "name": "health_test_main_nodes_sg",
            "vpc_id": "${aws_vpc.health_test_main.id}"
         }
      },
      "aws_security_group_rule": {
         "health_test_main_eks_sg_inbound": {
            "description": "Allow worker nodes to communicate with the cluster API Server",
            "from_port": 443,
            "protocol": "tcp",
            "security_group_id": "${aws_security_group.health_test_main_eks_sg.id}",
            "source_security_group_id": "${aws_security_group.health_test_main_nodes_sg.id}",
            "to_port": 443,
            "type": "ingress"
         },
         "health_test_main_eks_sg_outbound": {
            "description": "Allow cluster API Server to communicate with the worker nodes",
            "from_port": 1024,
            "protocol": "tcp",
            "security_group_id": "${aws_security_group.health_test_main_eks_sg.id}",
            "source_security_group_id": "${aws_security_group.health_test_main_nodes_sg.id}",
            "to_port": 65535,
            "type": "egress"
         },
         "health_test_main_nodes_sg_nodes_cluster_inbound": {
            "description": "Allow worker Kubelets and pods to receive communication from the cluster control plane",
            "from_port": 1025,
            "protocol": "tcp",
            "security_group_id": "${aws_security_group.health_test_main_nodes_sg.id}",
            "source_security_group_id": "${aws_security_group.health_test_main_eks_sg.id}",
            "to_port": 65535,
            "type": "ingress"
         },
         "health_test_main_nodes_sg_nodes_cluster_outbound": {
            "description": "Allow worker Kubelets and pods to receive communication from the cluster control plane",
            "from_port": 1025,
            "protocol": "tcp",
            "security_group_id": "${aws_security_group.health_test_main_nodes_sg.id}",
            "source_security_group_id": "${aws_security_group.health_test_main_eks_sg.id}",
            "to_port": 65535,
            "type": "egress"
         },
         "health_test_main_nodes_sg_nodes_internal": {
            "description": "Allow nodes to communicate with each other",
            "from_port": 0,
            "protocol": "-1",
            "security_group_id": "${aws_security_group.health_test_main_nodes_sg.id}",
            "source_security_group_id": "${aws_security_group.health_test_main_nodes_sg.id}",
            "to_port": 65535,
            "type": "ingress"
         }
      },
      "aws_subnet": {
         "private_health_test_main_0": {
            "availability_zone": "ap-southeast-2b",
            "cidr_block": "10.101.3.0/24",
            "tags": {
               "Name": "health_private_0",
               "Network": "private",
               "env": "test",
               "immutable_metadata": "{ \"purpose\": \"health_test_main\", \"target\": null }",
               "kubernetes.io/cluster/health_test_main": "owned",
               "kubernetes.io/role/internal-elb": 1,
               "owner": "health",
               "terraform": true
            },
            "vpc_id": "${aws_vpc.health_test_main.id}"
         },
         "private_health_test_main_1": {
            "availability_zone": "ap-southeast-2c",
            "cidr_block": "10.101.4.0/24",
            "tags": {
               "Name": "health_private_1",
               "Network": "private",
               "env": "test",
               "immutable_metadata": "{ \"purpose\": \"health_test_main\", \"target\": null }",
               "kubernetes.io/cluster/health_test_main": "owned",
               "kubernetes.io/role/internal-elb": 1,
               "owner": "health",
               "terraform": true
            },
            "vpc_id": "${aws_vpc.health_test_main.id}"
         },
         "public_health_test_main_0": {
            "availability_zone": "ap-southeast-2b",
            "cidr_block": "10.101.0.0/24",
            "map_public_ip_on_launch": true,
            "tags": {
               "Name": "health_public_0",
               "Network": "public",
               "env": "test",
               "immutable_metadata": "{ \"purpose\": \"external_health_test_main\", \"target\": null }",
               "kubernetes.io/cluster/health_test_main": "owned",
               "kubernetes.io/role/elb": 1,
               "owner": "health",
               "terraform": true
            },
            "vpc_id": "${aws_vpc.health_test_main.id}"
         },
         "public_health_test_main_1": {
            "availability_zone": "ap-southeast-2c",
            "cidr_block": "10.101.1.0/24",
            "map_public_ip_on_launch": true,
            "tags": {
               "Name": "health_public_1",
               "Network": "public",
               "env": "test",
               "immutable_metadata": "{ \"purpose\": \"external_health_test_main\", \"target\": null }",
               "kubernetes.io/cluster/health_test_main": "owned",
               "kubernetes.io/role/elb": 1,
               "owner": "health",
               "terraform": true
            },
            "vpc_id": "${aws_vpc.health_test_main.id}"
         }
      },
      "aws_vpc": {
         "health_test_main": {
            "cidr_block": "10.101.0.0/16",
            "tags": {
               "Name": "health_test_main",
               "env": "test",
               "owner": "health",
               "terraform": true
            }
         }
      }
   },
   "terraform": {
      "backend": {
         "pg": {
            "conn_str": "postgres://postgres:postgres@127.0.0.1:5432/terraform_bankend?sslmode=disable"
         }
      },
      "required_providers": {
         "aws": {
            "source": "hashicorp/aws",
            "version": "4.64.0"
         },
         "postgresql": {
            "source": "cyrilgdn/postgresql",
            "version": "1.19.0"
         }
      }
   }
}
